{"version":3,"sources":["Containers/App/App.module.scss","Containers/Hall/Hall.module.scss","Containers/Leaderboard/Leaderboard.module.scss","components/Button/Button.module.scss","images/default.jpg","components/Button/index.js","components/Button/Button.jsx","firebase.js","components/Image/Image.jsx","Containers/Images/index.js","Containers/Images/Images.jsx","Containers/Game/Game.jsx","components/UserInput/index.js","components/UserInput/UserInput.jsx","Containers/Hall/index.js","Containers/Hall/Hall.jsx","Containers/Leaderboard/index.js","Containers/Leaderboard/Leaderboard.jsx","components/Why/Why.jsx","Containers/App/index.js","Containers/App/App.js","serviceWorker.js","index.js","Containers/Game/Game.module.scss","components/Why/Why.module.scss"],"names":["module","exports","Button","className","styles","button","onClick","this","props","text","React","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","provider","GoogleAuthProvider","Image","state","rotationValue","randomNumber360","scale","randomNumber2","color","firstRandomNumber255","secondRandomNumber255","thirdRandomNumber255","resetTransformations","game","isCorrected","index","setState","handleImageClick","randomRotation","numRows","Math","floor","sqrt","numImages","transformation","transform","width","height","backgroundColor","style","src","alt","Images","correctedArray","boolean","image","user","photoURL","randNum","max","ceil","random","innerHtml","push","key","Game","difficulty","status","runningTime","winStatus","subWinStatus","scores","checkWinStatus","alert","type","collection","doc","set","displayName","finishTime","then","globalHistory","navigate","catch","error","console","handleReset","handleClick","concat","clearInterval","timer","startTime","Date","now","setInterval","filter","booleanValue","length","addButtons","map","initializeGame","buttons","addImages","mainContent","activate","isActive","UserInput","onChange","handleChange","Hall","html","form","setInputValue","Leaderboard","filteredScores","chosenDifficulty","getScores","get","querySnapshot","orderedScores","docs","data","docId","id","sort","a","b","leaderboardDifficulty","selectDifficulty","score","slice","instruction","tableHeading","table","Why","intro","mainTitle","href","mainBody","title","App","rotation","signIn","auth","signInWithPopup","result","log","signInDefault","require","event","target","value","welcome","to","textDecoration","path","logIn","flexButtons","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.47d820f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"logIn\":\"App_logIn__7Rynr\",\"flexButtons\":\"App_flexButtons__2wa66\",\"welcome\":\"App_welcome__2EYGT\",\"buttons\":\"App_buttons__23GPN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainContent\":\"Hall_mainContent__31o2l\",\"form\":\"Hall_form__1o01v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"Leaderboard_table__2KQuN\",\"buttons\":\"Leaderboard_buttons__1ycdw\",\"button\":\"Leaderboard_button__1_RSB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__19xhJ\"};","module.exports = __webpack_public_path__ + \"static/media/default.97569f09.jpg\";","import Button from \"./Button\";\r\n\r\nexport default Button;\r\n","import React from \"react\";\r\nimport styles from \"./Button.module.scss\";\r\n\r\nclass Login extends React.Component {\r\n  render() {\r\n    return (\r\n      <button className={styles.button} onClick={this.props.onClick}>\r\n        {this.props.text}\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import * as firebase from \"firebase/app\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/auth\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyAJ71l4tlltc5zr2VIFN3a92qU_qgbBvRE\",\r\n  authDomain: \"hall-of-mirrors-4ea96.firebaseapp.com\",\r\n  databaseURL: \"https://hall-of-mirrors-4ea96.firebaseio.com\",\r\n  projectId: \"hall-of-mirrors-4ea96\",\r\n  storageBucket: \"hall-of-mirrors-4ea96.appspot.com\",\r\n  messagingSenderId: \"554567970977\",\r\n  appId: \"1:554567970977:web:8a15a6f2b9fb3e3e8c00e0\",\r\n  measurementId: \"G-MPEPWF91N4\"\r\n};\r\n\r\n// Initialising firebase\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\n// Exporting connection to database as a variable\r\nexport const firestore = firebase.firestore();\r\n\r\nexport const provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport default firebase;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Image extends Component {\r\n  state = {\r\n    rotationValue: this.props.randomNumber360,\r\n    scale: this.props.randomNumber2,\r\n    color: `rgb(${this.props.firstRandomNumber255}, ${this.props.secondRandomNumber255}, ${this.props.thirdRandomNumber255})`\r\n  };\r\n  resetTransformations = () => {\r\n    if (this.props.game) {\r\n      if (this.state.rotationValue !== 0) {\r\n        this.props.isCorrected(this.props.index, true);\r\n        this.setState({ rotationValue: 0, scale: 1, color: \"transparent\" });\r\n        this.props.handleImageClick();\r\n      } else {\r\n        this.props.isCorrected(this.props.index, false);\r\n        this.setState({\r\n          rotationValue: this.props.randomNumber360,\r\n          scale: this.props.randomNumber2,\r\n          color: `rgb(${this.props.firstRandomNumber255}, ${this.props.secondRandomNumber255}, ${this.props.thirdRandomNumber255})`\r\n        });\r\n      }\r\n    } else {\r\n      if (this.state.rotationValue !== 0) {\r\n        this.setState({ rotationValue: 0, scale: 1, color: \"transparent\" });\r\n      } else {\r\n        this.setState({\r\n          rotationValue: this.props.randomNumber360,\r\n          scale: this.props.randomNumber2,\r\n          color: `rgb(${this.props.firstRandomNumber255}, ${this.props.secondRandomNumber255}, ${this.props.thirdRandomNumber255})`\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    let randomRotation = `rotate(${this.state.rotationValue}deg)`;\r\n    let numRows = Math.floor(Math.sqrt(this.props.numImages));\r\n    // here I am finding the highest square number less than my number of images, to obtain a reasonable number of rows for the required number of images to be set across\r\n    let width = `${(100 * numRows * this.state.scale) /\r\n      this.props.numImages}vh`;\r\n    // now I'm taking the full viewport width multiplied by the number of rows set across, and dividing this by the number of images I want in a row to obtain an appropriate viewport width for each image to take up\r\n    let height = \"auto\";\r\n    let transformation = {\r\n      transform: randomRotation,\r\n      width,\r\n      height\r\n    };\r\n\r\n    let color = {\r\n      backgroundColor: this.state.color\r\n    };\r\n\r\n    return (\r\n      <div style={color}>\r\n        <img\r\n          src={this.props.src}\r\n          alt=\"display\"\r\n          style={transformation}\r\n          onClick={this.resetTransformations}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Image;\r\n","import Images from \"./Images\";\r\n\r\nexport default Images;\r\n","import React, { Component } from \"react\";\r\nimport Image from \"../../components/Image/Image\";\r\n\r\nclass Images extends Component {\r\n  state = { correctedArray: this.props.correctedArray };\r\n  isCorrected = (index, boolean) => {\r\n    const correctedArray = this.state.correctedArray;\r\n    correctedArray[index] = boolean;\r\n    this.setState({ correctedArray });\r\n  };\r\n  render() {\r\n    let image =\r\n      this.props.user !== null\r\n        ? this.props.user.photoURL\r\n        : \"../../images/default\";\r\n\r\n    let randNum = max => {\r\n      return Math.ceil(Math.random() * max);\r\n    };\r\n    let innerHtml = [];\r\n    for (let index = 0; index < this.props.numImages; index++) {\r\n      innerHtml.push(\r\n        <Image\r\n          src={image}\r\n          alt=\"display\"\r\n          key={index}\r\n          randomNumber360={randNum(360)}\r\n          randomNumber2={randNum(2)}\r\n          firstRandomNumber255={randNum(255)}\r\n          secondRandomNumber255={randNum(255)}\r\n          thirdRandomNumber255={randNum(255)}\r\n          numImages={this.props.numImages}\r\n          isCorrected={this.isCorrected}\r\n          index={index}\r\n          handleImageClick={this.props.handleImageClick}\r\n          game={this.props.game}\r\n        />\r\n      );\r\n    }\r\n\r\n    return <>{innerHtml}</>;\r\n  }\r\n}\r\n\r\nexport default Images;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Game.module.scss\";\r\nimport Button from \"../../components/Button\";\r\nimport Images from \"../Images\";\r\nimport { globalHistory } from \"@reach/router\";\r\nimport { firestore } from \"../../firebase\";\r\n\r\nclass Game extends Component {\r\n  state = {\r\n    difficulty: null,\r\n    status: false,\r\n    runningTime: 0,\r\n    correctedArray: [],\r\n    numImages: 0,\r\n    winStatus: false,\r\n    subWinStatus: false,\r\n    scores: []\r\n  };\r\n\r\n  checkWinStatus = () => {\r\n    if (this.state.winStatus === true) {\r\n      alert(\r\n        `You win! You finished difficulty level ${\r\n          this.state.difficulty.type\r\n        } in ${this.state.runningTime /\r\n          1000} seconds. Your score has been added to the leaderboard, click the leaderboard to check if you've made the top 25 for your difficulty`\r\n      );\r\n      firestore\r\n        .collection(\"Leaderboard\")\r\n        .doc()\r\n        .set({\r\n          user: this.props.user.displayName,\r\n          difficulty: this.state.difficulty.type,\r\n          finishTime: this.state.runningTime\r\n        })\r\n        .then(() => {\r\n          globalHistory.navigate(\"/leaderboard\");\r\n        })\r\n        .catch(function(error) {\r\n          console.error(\"Error writing document: \", error);\r\n        });\r\n      this.handleReset();\r\n    }\r\n  };\r\n\r\n  handleClick = () => {\r\n    let numImages = this.state.difficulty\r\n      ? this.state.difficulty.numImages\r\n      : this.state.numImages;\r\n\r\n    let correctedArray = [];\r\n    for (let index = 0; index < numImages; index++) {\r\n      correctedArray = correctedArray.concat(false);\r\n    }\r\n    this.setState({ correctedArray });\r\n    this.setState(state => {\r\n      if (state.status) {\r\n        clearInterval(state.timer);\r\n      } else {\r\n        const startTime = Date.now() - state.runningTime;\r\n        state.timer = setInterval(() => {\r\n          this.setState({ runningTime: Date.now() - startTime });\r\n        }, 100);\r\n      }\r\n      return { status: !state.status };\r\n    });\r\n  };\r\n\r\n  handleImageClick = () => {\r\n    let winStatus =\r\n      this.state.correctedArray.filter(booleanValue => booleanValue === false)\r\n        .length === 1\r\n        ? true\r\n        : false;\r\n    let subWinStatus =\r\n      this.state.correctedArray.filter(booleanValue => booleanValue === false)\r\n        .length === 0\r\n        ? true\r\n        : false;\r\n    this.setState({ winStatus, subWinStatus });\r\n    this.checkWinStatus();\r\n  };\r\n\r\n  handleReset = () => {\r\n    this.setState(\r\n      {\r\n        runningTime: 0,\r\n        status: true,\r\n        difficulty: null,\r\n        winStatus: false,\r\n        subWinStatus: false,\r\n        correctedArray: []\r\n      },\r\n      this.handleClick\r\n    );\r\n  };\r\n\r\n  render() {\r\n    let difficulties = [\r\n      { type: \"easy\", numImages: 5 },\r\n      { type: \"mediocre\", numImages: 25 },\r\n      { type: \"tough\", numImages: 50 },\r\n      { type: \"hard\", numImages: 100 },\r\n      { type: \"I've literally got all day\", numImages: 500 }\r\n    ];\r\n    let addButtons = difficulties.map((difficulty, index) => (\r\n      <Button\r\n        className={styles.button}\r\n        onClick={() => {\r\n          this.setState({ difficulty });\r\n        }}\r\n        text={difficulty.type}\r\n        key={index}\r\n      />\r\n    ));\r\n\r\n    let initializeGame = this.state.difficulty ? (\r\n      <div className={styles.buttons}>\r\n        <p className={styles.button}>\r\n          {Math.ceil(this.state.runningTime / 100) / 10}s\r\n        </p>\r\n        <button className={styles.button} onClick={this.handleClick}>\r\n          {this.state.status ? \"Pause\" : \"Start\"}\r\n        </button>\r\n        <button className={styles.button} onClick={this.handleReset}>\r\n          Play again?\r\n        </button>\r\n      </div>\r\n    ) : (\r\n      <>\r\n        <p>First, select your difficulty</p>\r\n        <section className={styles.buttons}>{addButtons}</section>\r\n      </>\r\n    );\r\n\r\n    let addImages =\r\n      this.state.difficulty &&\r\n      this.state.status &&\r\n      this.state.subWinStatus === false ? (\r\n        <section className={styles.mainContent}>\r\n          <Images\r\n            activate={this.activate}\r\n            user={this.props.user}\r\n            numImages={this.state.difficulty.numImages}\r\n            isActive={this.state.isActive}\r\n            correctedArray={this.state.correctedArray}\r\n            handleImageClick={this.handleImageClick}\r\n            game={true}\r\n          />\r\n        </section>\r\n      ) : (\r\n        <section></section>\r\n      );\r\n\r\n    return (\r\n      <>\r\n        {initializeGame}\r\n        {addImages}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Game;\r\n","import UserInput from \"./UserInput\";\r\n\r\nexport default UserInput;\r\n","import React, { Component } from \"react\";\r\n\r\nclass UserInput extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <p> Please choose how many of your face you'd like to see</p>\r\n        <input type=\"number\" onChange={this.props.handleChange} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UserInput;\r\n","import Hall from \"./Hall\";\r\n\r\nexport default Hall;\r\n","import React, { Component } from \"react\";\r\nimport UserInput from \"../../components/UserInput\";\r\nimport styles from \"./Hall.module.scss\";\r\nimport Images from \"../Images\";\r\n\r\nclass Hall extends Component {\r\n  render() {\r\n    let html =\r\n      this.props.numImages > 5000 ? (\r\n        <>\r\n          <section className={styles.form}>\r\n            <UserInput handleChange={this.props.setInputValue} />\r\n          </section>\r\n          <p>\r\n            Sorry, loading this many images takes too long. Please choose a\r\n            number less than or equal to 5000.\r\n          </p>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <section className={styles.form}>\r\n            <UserInput handleChange={this.props.setInputValue} />\r\n          </section>\r\n          <section className={styles.mainContent}>\r\n            <Images user={this.props.user} numImages={this.props.numImages} />\r\n          </section>\r\n        </>\r\n      );\r\n    return <>{html}</>;\r\n  }\r\n}\r\n\r\nexport default Hall;\r\n","import Leaderboard from \"./Leaderboard\";\r\n\r\nexport default Leaderboard;\r\n","import React, { Component } from \"react\";\r\nimport { firestore } from \"../../firebase\";\r\nimport styles from \"./Leaderboard.module.scss\";\r\nimport Button from \"../../components/Button\";\r\n\r\nclass Leaderboard extends Component {\r\n  state = { scores: [], filteredScores: [], chosenDifficulty: null };\r\n  getScores = () => {\r\n    firestore\r\n      .collection(\"Leaderboard\")\r\n      .get()\r\n      .then(querySnapshot => {\r\n        let scores = querySnapshot.docs.map(doc => {\r\n          const scores = {\r\n            ...doc.data(),\r\n            docId: doc.id\r\n          };\r\n          return scores;\r\n        });\r\n        let orderedScores = scores.sort(function(a, b) {\r\n          return a.finishTime - b.finishTime;\r\n        });\r\n        this.setState({\r\n          scores: orderedScores\r\n        });\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.getScores();\r\n  }\r\n\r\n  leaderboardDifficulty = chosenDifficulty => {\r\n    let selectDifficulty = this.state.scores.filter(\r\n      score => score.difficulty === chosenDifficulty\r\n    );\r\n\r\n    selectDifficulty.length > 25\r\n      ? (selectDifficulty = selectDifficulty.slice(0, 25))\r\n      : (selectDifficulty = selectDifficulty.slice());\r\n\r\n    this.setState({ filteredScores: selectDifficulty });\r\n  };\r\n\r\n  render() {\r\n    let difficulties = [\r\n      \"easy\",\r\n      \"mediocre\",\r\n      \"tough\",\r\n      \"hard\",\r\n      \"I've literally got all day\"\r\n    ];\r\n\r\n    let addButtons = difficulties.map((difficulty, index) => (\r\n      <Button\r\n        className={styles.button}\r\n        onClick={() => {\r\n          this.setState(\r\n            { chosenDifficulty: difficulty },\r\n            this.leaderboardDifficulty(difficulty)\r\n          );\r\n        }}\r\n        text={difficulty}\r\n        key={index}\r\n      />\r\n    ));\r\n\r\n    let instruction =\r\n      this.state.chosenDifficulty == null ? (\r\n        <p>Choose a difficulty to view scores for</p>\r\n      ) : (\r\n        <p>Select a different difficulty?</p>\r\n      );\r\n\r\n    let tableHeading =\r\n      this.state.chosenDifficulty == null ? null : (\r\n        <tr>\r\n          <th>Position</th>\r\n          <th>User's name</th>\r\n          <th>Finish time (seconds)</th>\r\n        </tr>\r\n      );\r\n\r\n    return (\r\n      <>\r\n        {instruction}\r\n        <section className={styles.buttons}>{addButtons}</section>\r\n        <table className={styles.table}>\r\n          <tbody>\r\n            {tableHeading}\r\n            {this.state.filteredScores.map((score, docId) => (\r\n              <tr key={docId}>\r\n                <th>{docId + 1}</th>\r\n                <th>{score.user}</th>\r\n                <th>{score.finishTime / 1000}</th>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Leaderboard;\r\n","import React, { Component } from \"react\";\r\nimport styles from \"./Why.module.scss\";\r\n\r\nclass Why extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <>\r\n        <section className={styles.intro}>\r\n          <p className={styles.mainTitle}>\r\n            Hall of Mirrors: A <a href=\"https://www.nology.io/\">_nology</a>{\" \"}\r\n            Brief\r\n          </p>\r\n          <p>\r\n            In week 7/12 of the _nology course, it was our second week of\r\n            learning React.js. We had gained a decent understanding of how React\r\n            worked, particularly spending time dealing with the unidirectional\r\n            data flow it uses, and how to use this to our advantage by passing\r\n            data as props. We built on this, by incorporating{\" \"}\r\n            <a href=\"http://firebase.google.com/\">Firebase</a> for auth,\r\n            databases and hosting. <b>Hall of Mirrors</b> is a brief we were set\r\n            on the Friday morning of this week, to establish our understanding\r\n            of these concepts. The brief is as follows:\r\n          </p>\r\n        </section>\r\n        <section className={styles.mainBody}>\r\n          <p className={styles.title}>Description</p>\r\n          <p>\r\n            Make a react application that allows the user to login with their\r\n            gmail account. When logged in, they will be shown their profile\r\n            picture numerous times. Each picture shown should be modified with\r\n            different angles and should be different to the other pictures.\r\n          </p>\r\n\r\n          <p className={styles.title}>Requirements</p>\r\n          <ul>\r\n            <li> Create a new react app using create-react-app</li>\r\n            <li>\r\n              Host this application on firebase using your custom domain name\r\n            </li>\r\n            <li>\r\n              When each mirror is clicked it should toggle between a normal look\r\n              and the distorted mirror look\r\n            </li>\r\n          </ul>\r\n          <p className={styles.title}>What next?</p>\r\n          <p>\r\n            Following the brief, I saw an opportunity to further consolidate my\r\n            understanding of React and Firebase, so I set myself the challenge\r\n            to build upon this app. I extended the Hall of Mirrors brief to\r\n            include a game. This involved adding a little bit of routing to the\r\n            site & passing state about a lot. From this I learned a lot about\r\n            setState() and where it can and cannot be used. Having achieved a\r\n            functioning game I added a leaderboard which is linked to firestore\r\n            to incorporate some CRUD and use the auth a bit more. Given some\r\n            more time working on this I would make the user data context rather\r\n            than a prop & potentially make my user ID an admin who can delete\r\n            leaderboard entries, to practice the authorisation side of auth.\r\n          </p>\r\n        </section>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Why;\r\n","import App from \"./App\";\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport firebase, { provider } from \"../../firebase\";\r\nimport { globalHistory } from \"@reach/router\";\r\nimport styles from \"./App.module.scss\";\r\nimport { Link } from \"@reach/router\";\r\nimport { Router } from \"@reach/router\";\r\nimport Game from \"../Game/Game\";\r\nimport Hall from \"../Hall\";\r\nimport Leaderboard from \"../Leaderboard\";\r\nimport Why from \"../../components/Why/Why\";\r\n\r\nclass App extends React.Component {\r\n  state = { user: null, numImages: 0, rotation: 0 };\r\n  signIn = () => {\r\n    firebase\r\n      .auth()\r\n      .signInWithPopup(provider)\r\n      .then(result => {\r\n        const user = result.user;\r\n        this.setState({ user: user });\r\n        globalHistory.navigate(\"/\");\r\n      })\r\n      .catch(error => console.log(error));\r\n  };\r\n\r\n  signInDefault = () => {\r\n    this.setState({\r\n      user: {\r\n        displayName: \"Unknown User\",\r\n        photoURL: require(\"../../images/default.jpg\")\r\n      }\r\n    });\r\n  };\r\n\r\n  setInputValue = event => {\r\n    this.setState({\r\n      numImages: event.target.value\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let html =\r\n      this.state.user != null ? (\r\n        <section className={styles.welcome}>\r\n          <h1>Would you like to enter the Hall of Mirrors or play a game?</h1>\r\n          <section className={styles.buttons}>\r\n            <button>\r\n              <Link\r\n                to=\"/hall\"\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n              >\r\n                Enter the Hall\r\n              </Link>\r\n            </button>\r\n            <button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/game\"\r\n              >\r\n                Play the Game\r\n              </Link>\r\n            </button>\r\n            <button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/leaderboard\"\r\n              >\r\n                Leaderboard\r\n              </Link>\r\n            </button>\r\n            <button>\r\n              <Link\r\n                style={{ textDecoration: \"none\", color: \"white\" }}\r\n                to=\"/why\"\r\n              >\r\n                Why?\r\n              </Link>\r\n            </button>\r\n          </section>\r\n          <Router>\r\n            <Hall\r\n              path=\"/hall\"\r\n              numImages={this.state.numImages}\r\n              user={this.state.user}\r\n              setInputValue={this.setInputValue}\r\n            />\r\n            <Game user={this.state.user} path=\"/game\" />\r\n            <Leaderboard path=\"leaderboard\" />\r\n            <Why path=\"why\" />\r\n          </Router>\r\n        </section>\r\n      ) : (\r\n        <section className={styles.logIn}>\r\n          <h1> You have to log in to access this website. </h1>\r\n          <section className={styles.flexButtons}>\r\n            <div>\r\n              <Button onClick={this.signIn} text=\"Sign in\" />\r\n            </div>\r\n            <div>\r\n              <Button\r\n                onClick={this.signInDefault}\r\n                text=\"Enter as default user\"\r\n              />\r\n            </div>\r\n          </section>\r\n        </section>\r\n      );\r\n\r\n    return <>{html}</>;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"../src/Containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttons\":\"Game_buttons__16Fy2\",\"button\":\"Game_button__20II3\",\"mainContent\":\"Game_mainContent__3zPC8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"intro\":\"Why_intro__18pGH\",\"mainTitle\":\"Why_mainTitle__3jYLz\",\"mainBody\":\"Why_mainBody__2iSaL\",\"title\":\"Why_title__3_nfU\"};"],"sourceRoot":""}